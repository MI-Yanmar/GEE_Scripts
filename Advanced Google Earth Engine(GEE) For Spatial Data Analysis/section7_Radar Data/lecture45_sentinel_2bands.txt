// Get a feature collection of cambodia
var c = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017').filter(ee.Filter.eq('country_na', 'Cambodia'));
              
Map.addLayer(c);     

// DEFINE START AND END DATES
var startDate = ee.Date('2019-01-01');
var endDate = ee.Date('2019-06-30');

var s1=ee.ImageCollection("COPERNICUS/S1_GRD");

// FILTER SENTINEL-1
var comp = s1.filterBounds(c)
          .filterDate(startDate, endDate)
          // Filter to get images with VV and VH dual polarization.
          .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
          .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
          .filter(ee.Filter.eq('instrumentMode', 'IW'))
          .select("V.")
          .mosaic(); //spatially assembling image datasets to produce a spatially continuous image


//Map.addLayer(comp,{min:-30,max:0}, 'Before flood');     

var comp2 = s1.filterBounds(c)
          .filterDate(startDate, endDate)
          // Filter to get images with VV and VH dual polarization.
          .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
          .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
          .filter(ee.Filter.eq('instrumentMode', 'IW'))
          .select("V.") //select all bands starting with V
          .map(function(image) {
                    return image.addBands(image.metadata('system:time_start'));
                  })
          .mosaic()
          .clip(c);


Map.addLayer(comp2,{min:-30,max:0}, 'comp2');     

var rfdi = comp2.normalizedDifference(['VV', 'VH']);

Map.addLayer(rfdi,{min:-1,max:1},'rfdi');